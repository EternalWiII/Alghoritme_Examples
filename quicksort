#include <iostream>
#include <vector>

void output(std::vector<int>& v) {
	size_t size = v.size();
	for (size_t i = 0; i < size; i++)
	{
		std::cout << v[i] << " ";
	}
	std::cout << std::endl;
}

int partition(std::vector<int>& v, int start, int end) {
	int pivot = v[end];
	int index = start - 1;

	for (int j = start; j <= end - 1; j++) {
		if (v[j] <= pivot) {
			index++;
			std::swap(v[index], v[j]);
		}
	}
	std::swap(v[index + 1], v[end]);
	return index + 1;
}

void quicksort(std::vector<int>& v, int start, int end) {
	if (start < end) {
		int pivot = partition(v, start, end);

		quicksort(v, start, pivot - 1);
		quicksort(v, pivot + 1, end);
	}
}

int main() {
	std::vector<int> v(8, 4);
	/*std::vector<int> v{ 2, 8, 7, 1, 3, 5, 6, 4 };*/

	output(v);

	quicksort(v, 0, v.size() - 1);

	output(v);
}


