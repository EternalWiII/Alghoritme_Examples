#include <iostream>
#include <string>
#include <vector>


std::vector<int> slow_prefix_function(std::string s) {
    int n = (int) s.size();
    std::vector<int> p(n, 0);
    for (int i = 1; i < n; i++)
        for (int len = 1; len <= i; len++){
            // если префикс длины len равен суффиксу длины len
			std::cout << s.substr(0, len) << " " << s.substr(i - len + 1, len) << std::endl;
            if (s.substr(0, len) == s.substr(i - len + 1, len))
			{
				std::cout << "prev" << std::endl;
                p[i] = len;
			}
}
    return p;
}

void print_vector(const std::vector<int> &v){
	auto n = v.size();
	for (size_t i = 0; i < n; i++)
	{
		std::cout << v[i] << " ";
	}
	
}

void polymonal_hash(const std::string& s) {
	const int k = 31, mod = 1e9+7;
	long long h = 0, m = 1;
	for (char c : s) {
    	int x = (int) (c - 'a' + 1);
    	h = (h + m * x) % mod;
    	m = (m * k) % mod;	
	}
	std::cout << h << std::endl;
}

void polymonal_hash2(const std::string& s){
	const int k = 31, mod = 1e9+7;
	long long h = 0;
	for (char c : s) {
    int x = (int) (c - 'a' + 1);
    h = (h * k + x) % mod;
	}
	std::cout << h << std::endl; 
}

int main () {
	polymonal_hash("abcdef");
	polymonal_hash2("abcdef");
}
