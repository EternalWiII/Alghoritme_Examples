#include <iostream>

int main() {
	const int size = 7;
	int arr[size] = {7, 6, 5, 3, 6, 5, -8};
	unsigned int key;

	std::cin >> key;
	for (size_t i = 0; i < size; i++)
	{
		if (arr[i] == key) {
			std::cout << i << std::endl;
			return 0;
		}
	}

	std::cout << std::endl;
}

/*
	Инвариант цикла
	Инициализация:
		Проверим цикл перед первой итерацией
		i = 1
		Подмасив arr[0...i] состоит только из одного елемента и при этом
		этот елемент не проверен
	Сохранение: 
		Покажем что инвариант цикла сохраняетсья после каждой итерации
		По факту в теле цикла for происходит сдвиг елементов arr[i+1]...arr[i+2]...
		На одну позицию вправо пока не будет найден соответствующий елемент и
		завершен цикл.
		Таким образом подмасив arr[0...i] состоит из провереных елементнов
	Завершение: 
		То что происходит по завершению работы цикла
		Условие приводящее к завершению цикла for: i>size
		Так как каждая итерация цикла увеличивает i на 1, то
		мы должны в этот момент иметь i = size
		Подставим это значение в формулировку инварианта и получим, что 
		подмасив arr[1...size], с изначально не провереными елементами и есть 
		наш нынешний масив arr[1...size] с провереными елементами
		При таком случае наш масив проверен, а соответствующий елемент не выявлен
*/
